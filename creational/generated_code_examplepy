python
class Shape:
    def draw(self):
        raise NotImplementedError("You should implement this method.")


class Circle(Shape):
    def draw(self):
        return "Drawing a Circle"


class Square(Shape):
    def draw(self):
        return "Drawing a Square"


class ShapeFactory:
    @staticmethod
    def create_shape(shape_type):
        if shape_type == "Circle":
            return Circle()
        elif shape_type == "Square":
            return Square()
        else:
            raise ValueError("Unknown shape type")


# Usage
if __name__ == "__main__":
    shape1 = ShapeFactory.create_shape("Circle")
    shape2 = ShapeFactory.create_shape("Square")
    print(shape1.draw())
    print(shape2.draw())